#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:32:02.677][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7bed4a85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:32:03.426][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-19 15:32:05.39][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-19 15:32:05.40][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:32:05.127][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-19 15:32:06.707][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-19 15:32:07.167][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-19 15:32:07.382][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7bed4a85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-19 15:32:07.645][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-19 15:32:07.697][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-19 15:32:07.698][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-19 15:32:07.894][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-19 15:32:07.895][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2729 ms
[WARN][][2021-08-19 15:32:08.44][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-19 15:32:08.45][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-19 15:32:08.68][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@286a4c52
[INFO][][2021-08-19 15:32:09.672][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: ce08b8b3-3049-45f6-852a-b65d73bcd037

[INFO][][2021-08-19 15:32:09.850][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a71ebf1, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d34866a, org.springframework.security.web.header.HeaderWriterFilter@5af4328e, org.springframework.security.web.authentication.logout.LogoutFilter@486dd616, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@102aa5fc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fc56d61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@538a90a5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16890f00, org.springframework.security.web.session.SessionManagementFilter@362c48c, org.springframework.security.web.access.ExceptionTranslationFilter@178c6261, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b0e5d5f]
[WARN][][2021-08-19 15:32:09.879][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-19 15:32:09.879][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-19 15:32:10.185][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-19 15:32:10.786][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-19 15:32:11.99][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-19 15:32:11.144][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-19 15:32:11.146][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-19 15:32:11.167][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629408731165 with initial instances count: 0
[INFO][][2021-08-19 15:32:11.179][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-19 15:32:11.238][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-19 15:32:11.241][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-19 15:32:11.245][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 10.519 seconds (JVM running for 11.453)
[INFO][][2021-08-19 15:43:27.567][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-19 15:43:27.569][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-19 15:43:27.585][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 16 ms
[INFO][][2021-08-19 15:43:28.718][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 395 ms
[INFO][][2021-08-19 15:43:29.138][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-19 15:43:29.178][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-19 15:43:29.179][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-19 15:43:29.205][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-19 15:43:29.212][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@19f74326
[INFO][][2021-08-19 15:44:42.156][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-19 15:44:42.156][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-19 15:44:42.163][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-19 15:44:42.283][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-19 15:44:42.292][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-19 15:44:42.297][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-19 15:44:42.297][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:44:58.718][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3ff6136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:44:59.276][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-19 15:45:00.542][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-19 15:45:00.543][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:45:00.630][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-19 15:45:01.537][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-19 15:45:01.923][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-19 15:45:02.173][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3ff6136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-19 15:45:02.560][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-19 15:45:02.605][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-19 15:45:02.605][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-19 15:45:02.744][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-19 15:45:02.744][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2098 ms
[WARN][][2021-08-19 15:45:02.906][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-19 15:45:02.906][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-19 15:45:02.919][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@b32e983
[INFO][][2021-08-19 15:45:04.467][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: acd4cfdd-0850-484d-9339-a723bbde0f7e

[INFO][][2021-08-19 15:45:04.570][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e343265, org.springframework.security.web.context.SecurityContextPersistenceFilter@94aeba1, org.springframework.security.web.header.HeaderWriterFilter@535be281, org.springframework.security.web.authentication.logout.LogoutFilter@3e89f5bc, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4c1b4e07, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14eb96e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ad198c9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4301fa39, org.springframework.security.web.session.SessionManagementFilter@75dbe490, org.springframework.security.web.access.ExceptionTranslationFilter@2651e783, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@126ff1a1]
[WARN][][2021-08-19 15:45:04.592][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-19 15:45:04.592][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-19 15:45:04.851][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-19 15:45:05.594][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-19 15:45:05.977][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-19 15:45:06.631][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-19 15:45:06.635][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-19 15:45:06.661][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629409506659 with initial instances count: 0
[INFO][][2021-08-19 15:45:06.673][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-19 15:45:06.714][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-19 15:45:06.715][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-19 15:45:06.718][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.995 seconds (JVM running for 9.432)
[INFO][][2021-08-19 15:45:24.742][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-19 15:45:24.744][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-19 15:45:24.760][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 16 ms
[INFO][][2021-08-19 15:45:25.589][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 269 ms
[INFO][][2021-08-19 15:45:26.440][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-19 15:45:26.472][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-19 15:45:26.473][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-19 15:45:26.479][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-19 15:45:26.483][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@70abc832
[INFO][][2021-08-19 15:45:44.841][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-19 15:45:44.841][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-19 15:45:44.846][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-19 15:45:45.511][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-19 15:45:45.514][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-19 15:45:45.520][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-19 15:45:45.520][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:45:59.117][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc78384f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:45:59.672][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-19 15:46:00.889][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-19 15:46:00.890][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-19 15:46:00.992][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-19 15:46:01.956][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-19 15:46:02.366][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-19 15:46:02.653][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc78384f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-19 15:46:03.15][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-19 15:46:03.55][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-19 15:46:03.56][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-19 15:46:03.204][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-19 15:46:03.205][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2190 ms
[WARN][][2021-08-19 15:46:03.416][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-19 15:46:03.416][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-19 15:46:03.429][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2fa879ed
[INFO][][2021-08-19 15:46:05.438][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: a3927692-32a2-4fcb-80f3-1b3a49b27f5d

[INFO][][2021-08-19 15:46:05.541][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b50f432, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d9df336, org.springframework.security.web.header.HeaderWriterFilter@47374fa5, org.springframework.security.web.authentication.logout.LogoutFilter@7c200e57, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@587400a9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c737fdb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24e7087a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3fe5ad73, org.springframework.security.web.session.SessionManagementFilter@690e4b00, org.springframework.security.web.access.ExceptionTranslationFilter@5718e77c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60cc20e1]
[WARN][][2021-08-19 15:46:05.562][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-19 15:46:05.562][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-19 15:46:05.738][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-19 15:46:06.321][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-19 15:46:06.724][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-19 15:46:06.755][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-19 15:46:06.757][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-19 15:46:06.766][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629409566765 with initial instances count: 0
[INFO][][2021-08-19 15:46:06.776][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-19 15:46:06.815][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-19 15:46:06.816][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-19 15:46:06.818][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.832 seconds (JVM running for 9.236)
[INFO][][2021-08-19 15:47:20.288][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-19 15:47:20.289][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-19 15:47:20.301][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 11 ms
[INFO][][2021-08-19 15:47:20.518][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-19 15:47:20.519][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-19 15:47:20.520][support-microservice][net.occp.support.service.impl.SupportService:54] - ivanantoniodl@gmail.com
[INFO][][2021-08-19 15:47:24.564][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: ivanantoniodl@gmail.com
[INFO][][2021-08-19 15:47:24.932][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-19 15:47:24.960][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-19 15:47:24.960][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-19 15:47:24.964][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-19 15:47:24.967][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@b83e18b
[INFO][][2021-08-19 15:47:33.610][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-19 15:47:33.609][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-19 15:47:33.615][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-19 15:47:33.988][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-19 15:47:33.990][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-19 15:47:33.993][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-19 15:47:33.994][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
