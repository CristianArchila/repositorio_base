#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:50:35.190][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad4c381b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:50:35.488][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888
[INFO][][2021-08-18 10:50:35.662][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:230] - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[WARN][][2021-08-18 10:50:35.663][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:143] - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/support-microservice/local": Connection refused; nested exception is java.net.ConnectException: Connection refused
[INFO][][2021-08-18 10:50:35.684][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 10:50:37.278][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 10:50:39.674][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad4c381b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[WARN][][2021-08-18 10:50:40.725][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 10:50:40.726][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 10:50:40.750][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@31809f2b
[INFO][][2021-08-18 10:50:40.965][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 10:50:41.64][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 10:50:41.79][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 10:50:41.113][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629305441111 with initial instances count: 0
[INFO][][2021-08-18 10:50:41.703][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: a0d1779d-de0d-429b-a026-46c61221b829

[INFO][][2021-08-18 10:50:42.17][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f5f610d, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c6a222a, org.springframework.security.web.header.HeaderWriterFilter@63db2cb2, org.springframework.security.web.authentication.logout.LogoutFilter@471e3e69, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@27129ef5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4db5663b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@453e8239, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ba1c6b9, org.springframework.security.web.session.SessionManagementFilter@51e28071, org.springframework.security.web.access.ExceptionTranslationFilter@38ebee36, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22d2d248]
[WARN][][2021-08-18 10:50:42.409][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 10:50:42.410][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 10:50:42.733][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:50:44.318][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 10:50:45.172][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started AuthorizationServiceTest in 12.99 seconds (JVM running for 15.672)
[INFO][][2021-08-18 10:50:45.290][support-microservice][net.occp.support.service.impl.AuthorizationService:65] - Token found!
[INFO][][2021-08-18 10:50:45.305][support-microservice][org.springframework.test.context.support.AbstractTestContextBootstrapper:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [net.occp.support.service.impl.SupportServiceTest], using SpringBootContextLoader
[INFO][][2021-08-18 10:50:45.306][support-microservice][org.springframework.test.context.support.AbstractContextLoader:264] - Could not detect default resource locations for test class [net.occp.support.service.impl.SupportServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO][][2021-08-18 10:50:45.307][support-microservice][org.springframework.test.context.support.AnnotationConfigContextLoaderUtils:83] - Could not detect default configuration classes for test class [net.occp.support.service.impl.SupportServiceTest]: SupportServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO][][2021-08-18 10:50:45.308][support-microservice][org.springframework.boot.test.context.SpringBootTestContextBootstrapper:247] - Found @SpringBootConfiguration net.occp.support.SupportMicroserviceApplication for test class net.occp.support.service.impl.SupportServiceTest
[INFO][][2021-08-18 10:50:45.309][support-microservice][org.springframework.test.context.support.AbstractTestContextBootstrapper:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO][][2021-08-18 10:50:45.310][support-microservice][org.springframework.test.context.support.AbstractTestContextBootstrapper:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@10a2cb97, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@282f5392, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f577094, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@45f7c9f7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@430f4cad, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@116e349d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@258925f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5ecaf8c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6799bd93, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7b3a721]
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:50:45.390][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad4c381b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:50:45.448][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888
[INFO][][2021-08-18 10:50:45.454][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:230] - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[WARN][][2021-08-18 10:50:45.455][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:143] - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/support-microservice/local": Connection refused; nested exception is java.net.ConnectException: Connection refused
[INFO][][2021-08-18 10:50:45.457][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[INFO][][2021-08-18 10:50:45.969][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad4c381b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 10:50:46.418][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: f6ed865d-688c-4ef1-8dee-fe9f968b0ff8

[INFO][][2021-08-18 10:50:46.494][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2dd60c70, org.springframework.security.web.context.SecurityContextPersistenceFilter@70f3e678, org.springframework.security.web.header.HeaderWriterFilter@7c39d86f, org.springframework.security.web.authentication.logout.LogoutFilter@429c8222, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@66098fc2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ac5fab8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11199b67, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c8fc4d8, org.springframework.security.web.session.SessionManagementFilter@710a84e7, org.springframework.security.web.access.ExceptionTranslationFilter@1314b8f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ad7d183]
[WARN][][2021-08-18 10:50:46.639][support-microservice][org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration:163] - Netflix ConfigurationManager has already been installed, unable to re-install
[INFO][][2021-08-18 10:50:46.774][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:50:47.202][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 10:50:47.240][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 10:50:47.241][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 10:50:47.242][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629305447242 with initial instances count: 0
[INFO][][2021-08-18 10:50:47.657][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 10:50:48.192][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportServiceTest in 2.879 seconds (JVM running for 18.692)
[INFO][][2021-08-18 10:50:48.218][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 10:50:48.218][support-microservice][net.occp.support.service.impl.SupportService:54] - user@mail.com
[INFO][][2021-08-18 10:50:48.219][support-microservice][net.occp.support.service.impl.SupportService:61] - Error Sending Data to Mail Microservice
[INFO][][2021-08-18 10:50:48.225][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 10:50:48.225][support-microservice][net.occp.support.service.impl.SupportService:54] - user@mail.com
[INFO][][2021-08-18 10:50:48.226][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: user@mail.com
[INFO][][2021-08-18 10:50:48.257][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 10:50:48.258][support-microservice][net.occp.support.service.impl.SupportService:54] - user@mail.com
[INFO][][2021-08-18 10:50:48.258][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: user@mail.com
[INFO][][2021-08-18 10:50:48.270][support-microservice][org.springframework.test.context.support.AbstractTestContextBootstrapper:308] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [net.occp.support.service.impl.BaseServiceTest], using SpringBootContextLoader
[INFO][][2021-08-18 10:50:48.271][support-microservice][org.springframework.test.context.support.AbstractContextLoader:264] - Could not detect default resource locations for test class [net.occp.support.service.impl.BaseServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO][][2021-08-18 10:50:48.272][support-microservice][org.springframework.test.context.support.AnnotationConfigContextLoaderUtils:83] - Could not detect default configuration classes for test class [net.occp.support.service.impl.BaseServiceTest]: BaseServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO][][2021-08-18 10:50:48.273][support-microservice][org.springframework.boot.test.context.SpringBootTestContextBootstrapper:247] - Found @SpringBootConfiguration net.occp.support.SupportMicroserviceApplication for test class net.occp.support.service.impl.BaseServiceTest
[INFO][][2021-08-18 10:50:48.275][support-microservice][org.springframework.test.context.support.AbstractTestContextBootstrapper:248] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO][][2021-08-18 10:50:48.277][support-microservice][org.springframework.test.context.support.AbstractTestContextBootstrapper:177] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5aa0fbd0, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@350fc25b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1963270f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5020027c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d030dd3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@46d50b32, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@460e17b8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@166dcee7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@315346c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6df723a7]
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:50:48.355][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad4c381b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:50:48.420][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888
[INFO][][2021-08-18 10:50:48.427][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:230] - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
[WARN][][2021-08-18 10:50:48.427][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:143] - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/support-microservice/local": Connection refused; nested exception is java.net.ConnectException: Connection refused
[INFO][][2021-08-18 10:50:48.429][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[INFO][][2021-08-18 10:50:48.862][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ad4c381b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 10:50:49.281][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 10:50:49.300][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 10:50:49.301][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 10:50:49.302][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629305449302 with initial instances count: 0
[INFO][][2021-08-18 10:50:49.515][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 8abc1e33-1294-4c5b-83ff-8d1d27575312

[INFO][][2021-08-18 10:50:49.585][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1dfda1c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@382170dd, org.springframework.security.web.header.HeaderWriterFilter@5d5358b7, org.springframework.security.web.authentication.logout.LogoutFilter@27c8ca5d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@151f21a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@251f9216, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c282bc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e5a570, org.springframework.security.web.session.SessionManagementFilter@723b62e2, org.springframework.security.web.access.ExceptionTranslationFilter@56794250, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ce58f84]
[WARN][][2021-08-18 10:50:49.716][support-microservice][org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration:163] - Netflix ConfigurationManager has already been installed, unable to re-install
[INFO][][2021-08-18 10:50:49.853][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:50:50.582][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 10:50:51.49][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started BaseServiceTest in 2.77 seconds (JVM running for 21.549)
[ERROR][][2021-08-18 10:50:51.61][support-microservice][net.occp.support.service.impl.BaseService:26] - java.lang.Exception
[null]    	at net.occp.support.service.impl.BaseServiceTest.testPrintStackTrace(BaseServiceTest.java:34)
[null]    	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[null]    	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
[null]    	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[null]    	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
[null]    	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
[null]    	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
[null]    	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
[null]    	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
[null]    	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
[null]    	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
[null]    	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
[null]    	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
[null]    	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
[null]    	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
[null]    	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
[null]    	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
[null]    	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
[null]    	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
[null]    	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
[null]    	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
[null]    	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
[null]    	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
[null]    	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
[null]    	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
[null]    	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
[null]    	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
[null]    	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
[null]    	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
[null]    	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
[null]    	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
[null]    	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
[null]    	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
[null]    	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
[null]    
[INFO][][2021-08-18 10:50:51.84][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 10:50:51.85][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 10:50:51.89][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 10:50:52.97][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:50:52.100][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 10:50:52.100][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
[INFO][][2021-08-18 10:50:52.100][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:50:52.102][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:50:52.116][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 10:50:52.116][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 10:50:52.117][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
[INFO][][2021-08-18 10:50:52.117][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:57:57.733][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13252698] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:57:58.884][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 10:58:00.97][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 10:58:00.97][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:58:00.215][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 10:58:01.169][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 10:58:01.610][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 10:58:01.864][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13252698] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 10:58:02.439][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 10:58:02.549][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 10:58:02.550][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 10:58:02.973][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 10:58:02.974][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2745 ms
[WARN][][2021-08-18 10:58:03.135][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 10:58:03.135][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 10:58:03.147][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@17003497
[WARN][][2021-08-18 10:58:04.450][support-microservice][org.springframework.context.support.AbstractApplicationContext:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'supportController': Unsatisfied dependency expressed through field 'supportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'supportService': Unsatisfied dependency expressed through field 'supportConfig'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'supportConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'SYSTEM_USER' in value "${SYSTEM_USER}"
[WARN][][2021-08-18 10:58:05.452][support-microservice][zipkin2.reporter.AsyncReporter$BoundedAsyncReporter:312] - Timed out waiting for in-flight spans to send
[INFO][][2021-08-18 10:58:05.458][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Stopping service [Tomcat]
[WARN][][2021-08-18 10:58:05.467][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - The web application [support-microservice] appears to have started a thread named [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@77eb607e}] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.11/java.io.UnixFileSystem.getBooleanAttributes0(Native Method)
 java.base@11.0.11/java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:248)
 java.base@11.0.11/java.io.File.exists(File.java:831)
 java.base@11.0.11/jdk.internal.loader.URLClassPath$FileLoader.getResource(URLClassPath.java:1242)
 java.base@11.0.11/jdk.internal.loader.URLClassPath$FileLoader.findResource(URLClassPath.java:1208)
 java.base@11.0.11/jdk.internal.loader.URLClassPath.findResource(URLClassPath.java:291)
 java.base@11.0.11/jdk.internal.loader.BuiltinClassLoader.findResourceOnClassPath(BuiltinClassLoader.java:478)
 java.base@11.0.11/jdk.internal.loader.BuiltinClassLoader.findResource(BuiltinClassLoader.java:302)
 java.base@11.0.11/java.lang.ClassLoader.getResource(ClassLoader.java:1401)
 java.base@11.0.11/java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:1737)
 app//org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:174)
 app//org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:51)
 app//org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
 app//org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
 app//org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
 app//org.springframework.context.annotation.ConfigurationClassParser.retrieveBeanMethodMetadata(ConfigurationClassParser.java:399)
 app//org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:317)
 app//org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242)
 app//org.springframework.context.annotation.ConfigurationClassParser.processMemberClasses(ConfigurationClassParser.java:361)
 app//org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:263)
 app//org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242)
 app//org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:586)
 app//org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:302)
 app//org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242)
 app//org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:199)
 app//org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167)
 app//org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:315)
 app//org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232)
 app//org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)
 app//org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)
 app//org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:705)
 app//org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:531)
 app//org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:136)
 app//org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:101)
 app//org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:131)
 app//org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:145)
 app//org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:121)
 app//org.springframework.cloud.netflix.ribbon.SpringClientFactory.getLoadBalancer(SpringClientFactory.java:65)
 app//org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.getLoadBalancer(RibbonLoadBalancerClient.java:193)
 app//org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:88)
 app//org.springframework.cloud.netflix.ribbon.RibbonLoadBalancerClient.choose(RibbonLoadBalancerClient.java:78)
 app//org.springframework.cloud.sleuth.zipkin2.sender.LoadBalancerClientZipkinLoadBalancer.instance(LoadBalancerClientZipkinLoadBalancer.java:43)
 app//org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateSenderConfiguration$1.zipkinUrl(ZipkinRestTemplateSenderConfiguration.java:69)
 app//org.springframework.cloud.sleuth.zipkin2.sender.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateSenderConfiguration.java:160)
 app//org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:637)
 app//org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender.post(RestTemplateSender.java:129)
 app//org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:142)
 app//org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:132)
 app//zipkin2.Call$Base.execute(Call.java:379)
 app//zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:286)
 app//zipkin2.reporter.AsyncReporter$Builder$1.run(AsyncReporter.java:190)
[INFO][][2021-08-18 10:58:05.567][support-microservice][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:142] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[ERROR][][2021-08-18 10:58:05.572][support-microservice][org.springframework.boot.SpringApplication:858] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'supportController': Unsatisfied dependency expressed through field 'supportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'supportService': Unsatisfied dependency expressed through field 'supportConfig'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'supportConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'SYSTEM_USER' in value "${SYSTEM_USER}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:843)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at net.occp.support.SupportMicroserviceApplication.main(SupportMicroserviceApplication.java:14)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'supportService': Unsatisfied dependency expressed through field 'supportConfig'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'supportConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'SYSTEM_USER' in value "${SYSTEM_USER}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:338)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'supportConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'SYSTEM_USER' in value "${SYSTEM_USER}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'SYSTEM_USER' in value "${SYSTEM_USER}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:228)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:88)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:62)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:539)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:137)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:133)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:151)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:851)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1168)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	... 41 common frames omitted
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:59:50.867][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87ce84aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:59:51.560][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 10:59:52.731][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 10:59:52.732][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 10:59:52.980][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 10:59:53.863][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 10:59:54.280][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 10:59:54.547][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87ce84aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 10:59:54.913][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 10:59:54.949][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 10:59:54.950][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 10:59:55.106][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 10:59:55.107][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2110 ms
[WARN][][2021-08-18 10:59:55.270][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 10:59:55.271][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 10:59:55.284][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@248d3a
[INFO][][2021-08-18 10:59:56.931][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 0b5616b9-6349-4e1a-97fd-1dc8913377f5

[INFO][][2021-08-18 10:59:57.75][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@564d3940, org.springframework.security.web.context.SecurityContextPersistenceFilter@796cf2b5, org.springframework.security.web.header.HeaderWriterFilter@5213b887, org.springframework.security.web.authentication.logout.LogoutFilter@188ae8d2, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@306bf4c3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42f2cae8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62f6185a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58ad0586, org.springframework.security.web.session.SessionManagementFilter@eebd983, org.springframework.security.web.access.ExceptionTranslationFilter@5cdc8499, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@35840ecc]
[WARN][][2021-08-18 10:59:57.102][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 10:59:57.102][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 10:59:57.281][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 10:59:58.46][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 10:59:58.508][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 10:59:58.545][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 10:59:58.547][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 10:59:58.558][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629305998555 with initial instances count: 0
[INFO][][2021-08-18 10:59:58.567][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 10:59:58.633][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 10:59:58.634][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 10:59:58.648][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 9.02 seconds (JVM running for 9.522)
[INFO][][2021-08-18 11:00:31.249][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 11:00:31.250][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 11:00:31.269][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 18 ms
[INFO][][2021-08-18 11:00:51.31][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 302 ms
[INFO][][2021-08-18 11:00:51.999][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 11:00:52.33][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 11:00:52.34][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 11:00:52.40][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 11:00:52.44][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2fd010b9
[INFO][][2021-08-18 11:02:08.749][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 11:02:08.751][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 11:02:08.757][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 11:02:09.92][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 11:02:09.97][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 11:02:09.108][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 11:02:09.109][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:14:21.394][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75905a9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:14:21.937][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:14:23.178][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:14:23.178][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:14:23.272][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:14:24.167][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:14:24.568][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:14:24.827][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$75905a9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:14:25.170][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:14:25.196][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:14:25.196][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:14:25.361][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:14:25.362][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2075 ms
[WARN][][2021-08-18 12:14:25.522][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:14:25.522][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:14:25.535][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@17d816b3
[INFO][][2021-08-18 12:14:27.111][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: f642867f-09ad-41d5-a7e8-7954cba6a91e

[INFO][][2021-08-18 12:14:27.218][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4cd51e4e, org.springframework.security.web.context.SecurityContextPersistenceFilter@48751d8a, org.springframework.security.web.header.HeaderWriterFilter@4c579b5b, org.springframework.security.web.authentication.logout.LogoutFilter@27682fa9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@285c63cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@446cc036, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14293540, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e451790, org.springframework.security.web.session.SessionManagementFilter@6f27730b, org.springframework.security.web.access.ExceptionTranslationFilter@20960b51, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@624494d4]
[WARN][][2021-08-18 12:14:27.241][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:14:27.242][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:14:27.522][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:14:28.408][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:14:28.800][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:14:28.831][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:14:28.833][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:14:29.111][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629310469110 with initial instances count: 0
[INFO][][2021-08-18 12:14:29.121][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:14:29.160][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:14:29.161][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:14:29.164][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.877 seconds (JVM running for 9.557)
[INFO][][2021-08-18 12:15:04.870][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:15:04.871][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:15:04.890][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 18 ms
[INFO][][2021-08-18 12:15:06.29][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 381 ms
[INFO][][2021-08-18 12:15:06.411][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:15:06.451][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:15:06.452][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:15:06.463][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:15:06.468][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@74ee71c6
[INFO][][2021-08-18 12:16:44.252][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:16:44.253][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:16:44.262][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:16:44.526][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:16:44.548][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:16:44.552][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:16:44.552][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:17:46.989][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$49e0df12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:17:47.523][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:17:48.610][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:17:48.611][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:17:48.697][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:17:49.629][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:17:50.19][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:17:50.284][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$49e0df12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:17:50.617][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:17:50.645][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:17:50.646][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:17:50.828][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:17:50.829][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2116 ms
[WARN][][2021-08-18 12:17:50.983][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:17:50.983][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:17:50.996][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2804b13f
[INFO][][2021-08-18 12:17:52.520][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: e554dd87-2a17-4333-ac6d-05bf57067b36

[INFO][][2021-08-18 12:17:52.624][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70f5f57d, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a99543b, org.springframework.security.web.header.HeaderWriterFilter@4e343265, org.springframework.security.web.authentication.logout.LogoutFilter@65da1cbe, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@31a4db4f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f5ac587, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@578198d9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@691eb389, org.springframework.security.web.session.SessionManagementFilter@115a7e51, org.springframework.security.web.access.ExceptionTranslationFilter@6e1ad658, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@706c062e]
[WARN][][2021-08-18 12:17:52.647][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:17:52.647][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:17:52.818][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:17:53.431][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:17:53.815][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:17:53.845][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:17:53.847][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:17:53.856][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629310673855 with initial instances count: 0
[INFO][][2021-08-18 12:17:53.865][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:17:53.916][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:17:53.917][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:17:53.920][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 7.965 seconds (JVM running for 8.414)
[INFO][][2021-08-18 12:18:11.791][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:18:11.792][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:18:11.811][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 18 ms
[INFO][][2021-08-18 12:18:12.585][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 274 ms
[INFO][][2021-08-18 12:18:13.550][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:18:13.580][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:18:13.581][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:18:13.587][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:18:13.591][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@752f1563
[INFO][][2021-08-18 12:18:53.443][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:18:53.445][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:18:53.452][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:18:53.625][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:18:53.627][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:18:53.632][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:18:53.632][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:19:03.549][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79f3b62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:19:04.135][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:19:05.262][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:19:05.263][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:19:05.358][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:19:06.448][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:19:06.862][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:19:07.153][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79f3b62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:19:07.535][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:19:07.562][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:19:07.563][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:19:07.720][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:19:07.721][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2345 ms
[WARN][][2021-08-18 12:19:07.921][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:19:07.922][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:19:07.934][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4fee14b
[INFO][][2021-08-18 12:19:09.723][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 4f94b08b-01dc-4f31-8aec-5d5a758ac9e7

[INFO][][2021-08-18 12:19:09.835][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5718e77c, org.springframework.security.web.context.SecurityContextPersistenceFilter@22b3b5d0, org.springframework.security.web.header.HeaderWriterFilter@4c614d8c, org.springframework.security.web.authentication.logout.LogoutFilter@7adbec34, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@36cdcae0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bf89d3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e27bb89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d667b59, org.springframework.security.web.session.SessionManagementFilter@20d65767, org.springframework.security.web.access.ExceptionTranslationFilter@49bc71b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@735167e1]
[WARN][][2021-08-18 12:19:09.861][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:19:09.862][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:19:10.53][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:19:10.781][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:19:11.226][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:19:11.262][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:19:11.263][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:19:11.273][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629310751272 with initial instances count: 0
[INFO][][2021-08-18 12:19:11.283][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:19:11.324][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:19:11.325][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:19:11.328][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.847 seconds (JVM running for 9.315)
[INFO][][2021-08-18 12:19:14.965][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:19:14.972][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[WARN][][2021-08-18 12:19:15.236][support-microservice][org.springframework.context.support.AbstractApplicationContext:557] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaRibbonClientConfiguration': Unsatisfied dependency expressed through field 'eurekaConfig'; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[INFO][][2021-08-18 12:19:15.239][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:19:15.239][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:19:35.930][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e1618bc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:19:36.514][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:19:37.637][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:19:37.638][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:19:37.743][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:19:38.623][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:19:39.28][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:19:39.281][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e1618bc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:19:39.626][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:19:39.653][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:19:39.654][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:19:39.807][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:19:39.807][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2049 ms
[WARN][][2021-08-18 12:19:39.980][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:19:39.981][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:19:39.994][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@35329a05
[INFO][][2021-08-18 12:19:41.515][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: abbde696-6fd2-4e97-9cdb-441a6988fa9e

[INFO][][2021-08-18 12:19:41.619][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a926db4, org.springframework.security.web.context.SecurityContextPersistenceFilter@2a8e30e3, org.springframework.security.web.header.HeaderWriterFilter@349996a6, org.springframework.security.web.authentication.logout.LogoutFilter@3ff53704, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@402c9a60, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ef396c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34f24a11, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51e0f2eb, org.springframework.security.web.session.SessionManagementFilter@73dd0f23, org.springframework.security.web.access.ExceptionTranslationFilter@33827b88, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@372841d2]
[WARN][][2021-08-18 12:19:41.642][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:19:41.642][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:19:41.823][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:19:42.457][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:19:42.853][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:19:42.886][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:19:42.888][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:19:42.897][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629310782896 with initial instances count: 0
[INFO][][2021-08-18 12:19:42.907][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:19:42.961][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:19:42.962][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:19:42.965][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.142 seconds (JVM running for 8.587)
[INFO][][2021-08-18 12:19:59.250][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:19:59.251][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:19:59.270][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 19 ms
[INFO][][2021-08-18 12:20:00.195][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 289 ms
[INFO][][2021-08-18 12:20:00.546][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:20:00.579][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:20:00.580][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:20:00.587][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:20:00.591][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@441beaaf
[INFO][][2021-08-18 12:22:02.708][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:22:02.838][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:22:04.268][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:22:04.716][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:22:04.755][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:22:04.761][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:22:04.761][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:23:08.734][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13252698] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:23:10.01][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:23:11.915][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:23:11.917][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:23:12.100][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:23:14.605][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:23:15.315][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:23:15.905][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13252698] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:23:16.645][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:23:16.741][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:23:16.742][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:23:17.271][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:23:17.272][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 5088 ms
[WARN][][2021-08-18 12:23:17.823][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:23:17.824][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:23:17.858][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@a047bdb
[INFO][][2021-08-18 12:23:21.808][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: da46c388-8acb-4782-9272-bd9a3acf5a61

[INFO][][2021-08-18 12:23:21.971][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55665086, org.springframework.security.web.context.SecurityContextPersistenceFilter@1614499b, org.springframework.security.web.header.HeaderWriterFilter@3ef396c9, org.springframework.security.web.authentication.logout.LogoutFilter@257b6c58, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7efa366, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@31b289da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65da1cbe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@233ece92, org.springframework.security.web.session.SessionManagementFilter@3921e96f, org.springframework.security.web.access.ExceptionTranslationFilter@d1d85d0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7a51dc38]
[WARN][][2021-08-18 12:23:22.03][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:23:22.04][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:23:22.307][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:23:23.230][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:23:23.917][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:23:24.12][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:23:24.15][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:23:24.35][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629311004033 with initial instances count: 0
[INFO][][2021-08-18 12:23:24.51][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:23:24.139][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:23:24.141][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:23:24.147][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 18.18 seconds (JVM running for 20.95)
[INFO][][2021-08-18 12:23:36.939][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:23:36.941][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:23:36.965][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 24 ms
[INFO][][2021-08-18 12:23:38.152][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 509 ms
[INFO][][2021-08-18 12:23:38.988][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:23:39.24][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:23:39.25][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:23:39.32][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:23:39.37][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@130ae01e
[INFO][][2021-08-18 12:23:53.980][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:23:53.985][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:23:53.992][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:23:54.68][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:23:54.71][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:23:54.75][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:23:54.75][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:24:05.489][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4df1cd02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:24:06.71][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:24:07.169][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:24:07.170][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:24:07.271][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:24:08.323][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:24:08.758][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:24:09.22][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4df1cd02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:24:09.409][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:24:09.440][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:24:09.440][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:24:09.594][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:24:09.595][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2307 ms
[WARN][][2021-08-18 12:24:09.757][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:24:09.757][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:24:09.771][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16e07bae
[INFO][][2021-08-18 12:24:11.351][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 23169962-9483-4363-b354-594f1cc56334

[INFO][][2021-08-18 12:24:11.458][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31b289da, org.springframework.security.web.context.SecurityContextPersistenceFilter@27682fa9, org.springframework.security.web.header.HeaderWriterFilter@5aeebccc, org.springframework.security.web.authentication.logout.LogoutFilter@31a024ea, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@47f39279, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5606d537, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@178c6261, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58486deb, org.springframework.security.web.session.SessionManagementFilter@576b385d, org.springframework.security.web.access.ExceptionTranslationFilter@4c114687, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e0802e0]
[WARN][][2021-08-18 12:24:11.481][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:24:11.481][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:24:11.660][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:24:12.342][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:24:12.798][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:24:12.832][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:24:12.833][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:24:12.843][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629311052842 with initial instances count: 0
[INFO][][2021-08-18 12:24:12.853][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:24:12.892][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:24:12.893][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:24:12.896][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.938 seconds (JVM running for 9.511)
[INFO][][2021-08-18 12:24:24.496][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:24:24.497][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:24:24.513][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 15 ms
[INFO][][2021-08-18 12:24:25.390][support-microservice][org.springdoc.api.AbstractOpenApiResource:301] - Init duration for springdoc-openapi is: 361 ms
[INFO][][2021-08-18 12:24:25.485][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:24:25.518][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:24:25.518][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:24:25.525][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:24:25.529][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4ae95ff
[INFO][][2021-08-18 12:25:12.154][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:25:12.310][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:25:12.310][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[ERROR][][2021-08-18 12:25:12.350][support-microservice][net.occp.support.service.impl.AuthorizationService:68] - Exception: {0}
feign.RetryableException: Connection refused (Connection refused) executing POST http://localhost:3341/auth-microservice/auth/login
	at feign.FeignException.errorExecuting(FeignException.java:84)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:113)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy143.loginForToken(Unknown Source)
	at net.occp.support.service.impl.AuthorizationService.getSessionToken(AuthorizationService.java:64)
	at net.occp.support.service.impl.SupportService.sendMail(SupportService.java:58)
	at net.occp.support.controller.SupportController.sendEmail(SupportController.java:69)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1367)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1342)
	at feign.Client$Default.convertAndSend(Client.java:124)
	at feign.Client$Default.execute(Client.java:67)
	at org.springframework.cloud.sleuth.instrument.web.client.feign.TracingFeignClient.execute(TracingFeignClient.java:100)
	at org.springframework.cloud.sleuth.instrument.web.client.feign.LazyTracingFeignClient.execute(LazyTracingFeignClient.java:60)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:108)
	... 108 common frames omitted
[INFO][][2021-08-18 12:25:12.352][support-microservice][net.occp.support.service.impl.SupportService:61] - Error Sending Data to Mail Microservice
[WARN][][2021-08-18 12:25:12.355][support-microservice][net.occp.support.core.exception.ExceptionResourceAdvice:42] - [business exception] 500 : INTERNAL_ERROR, Error in the Auth microservice in: 
[WARN][][2021-08-18 12:25:12.357][support-microservice][net.occp.support.core.exception.ExceptionResourceAdvice:45] - [line] net.occp.support.service.impl.AuthorizationService : 69
[WARN][][2021-08-18 12:25:12.358][support-microservice][net.occp.support.core.exception.ExceptionResourceAdvice:45] - [line] net.occp.support.service.impl.SupportService : 58
[WARN][][2021-08-18 12:25:12.360][support-microservice][net.occp.support.core.exception.ExceptionResourceAdvice:45] - [line] net.occp.support.controller.SupportController : 69
[INFO][][2021-08-18 12:25:42.568][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:25:42.569][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:25:42.580][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:25:43.576][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:25:43.578][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:25:43.588][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:25:43.589][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:26:20.816][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50f55f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:26:21.611][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:26:23.349][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:26:23.350][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:26:23.442][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:26:24.450][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:26:24.864][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:26:25.130][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50f55f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:26:25.477][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:26:25.522][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:26:25.523][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:26:25.663][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:26:25.663][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2200 ms
[WARN][][2021-08-18 12:26:25.837][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:26:25.838][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:26:25.850][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7d7b4e04
[INFO][][2021-08-18 12:26:27.425][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 2197fdf7-f43d-44b7-8458-60c4321d7f56

[INFO][][2021-08-18 12:26:27.527][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@144dc2f7, org.springframework.security.web.context.SecurityContextPersistenceFilter@3bc3d70e, org.springframework.security.web.header.HeaderWriterFilter@5868ea91, org.springframework.security.web.authentication.logout.LogoutFilter@38d4488c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1f6e6f50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@568c9ee1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7112b21a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@403cff1c, org.springframework.security.web.session.SessionManagementFilter@27d5eb00, org.springframework.security.web.access.ExceptionTranslationFilter@71eaef6a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3023f157]
[WARN][][2021-08-18 12:26:27.552][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:26:27.553][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:26:27.716][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:26:28.363][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:26:28.759][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:26:28.915][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:26:28.916][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:26:28.925][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629311188924 with initial instances count: 0
[INFO][][2021-08-18 12:26:28.934][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:26:28.993][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:26:28.994][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:26:28.998][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 9.323 seconds (JVM running for 9.734)
[INFO][][2021-08-18 12:27:02.540][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:27:02.543][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:27:02.567][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 23 ms
[INFO][][2021-08-18 12:27:03.226][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:27:03.227][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:27:03.227][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[INFO][][2021-08-18 12:27:07.704][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: cristian.archilac@gmail.com
[INFO][][2021-08-18 12:27:08.845][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:27:08.877][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:27:08.877][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:27:08.884][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:27:08.888][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3e2ce667
[INFO][][2021-08-18 12:27:26.832][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:27:26.832][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:27:26.838][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:27:26.923][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:27:26.926][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:27:26.931][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:27:26.931][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:37:29.131][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bf5db65f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:37:30.155][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:37:31.320][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:37:31.321][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:37:31.477][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:37:33.219][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:37:33.838][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:37:34.188][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bf5db65f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:37:34.656][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:37:34.694][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:37:34.695][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:37:34.905][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:37:34.906][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 3401 ms
[WARN][][2021-08-18 12:37:35.142][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:37:35.191][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:37:36.17][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@39e3ea78
[INFO][][2021-08-18 12:37:39.40][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: c570fa65-0741-47ea-b571-0b3b77030c7e

[INFO][][2021-08-18 12:37:39.179][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39b95a80, org.springframework.security.web.context.SecurityContextPersistenceFilter@486dd616, org.springframework.security.web.header.HeaderWriterFilter@614361fa, org.springframework.security.web.authentication.logout.LogoutFilter@3aa1c45, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@cbdc0f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a8e30e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ca907af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ec62141, org.springframework.security.web.session.SessionManagementFilter@4c1b4e07, org.springframework.security.web.access.ExceptionTranslationFilter@126ff1a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56976b8b]
[WARN][][2021-08-18 12:37:39.205][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:37:39.205][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:37:39.418][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:37:41.176][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:37:41.811][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:37:41.848][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:37:41.867][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:37:41.877][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629311861875 with initial instances count: 0
[INFO][][2021-08-18 12:37:41.889][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:37:41.979][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:37:41.981][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:37:41.986][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 14.272 seconds (JVM running for 14.775)
[INFO][][2021-08-18 12:38:24.194][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:38:24.195][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:38:24.219][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 23 ms
[INFO][][2021-08-18 12:38:24.427][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:38:24.428][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:38:24.429][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[INFO][][2021-08-18 12:38:27.729][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: cristian.archilac@gmail.com
[INFO][][2021-08-18 12:38:28.581][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:38:28.617][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:38:28.618][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:38:28.625][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:38:28.629][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@23b23d81
[INFO][][2021-08-18 12:39:13.381][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:39:13.382][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:39:13.389][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:39:13.665][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:39:13.691][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:39:13.695][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:39:13.695][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:39:25.709][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e7979347] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:39:26.484][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:39:27.989][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:39:27.990][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:39:28.113][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:39:29.333][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:39:29.861][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:39:30.226][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e7979347] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:39:30.705][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:39:30.740][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:39:30.741][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:39:30.970][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:39:30.971][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2838 ms
[WARN][][2021-08-18 12:39:31.146][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:39:31.147][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:39:31.160][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@286a4c52
[INFO][][2021-08-18 12:39:33.251][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 786b346b-6b63-4b36-9960-6aeade2c68a9

[INFO][][2021-08-18 12:39:33.387][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f9980e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@1983a4e4, org.springframework.security.web.header.HeaderWriterFilter@2555a986, org.springframework.security.web.authentication.logout.LogoutFilter@1c7744c1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7fb5368e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78bce1c4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@568c9ee1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f6e6f50, org.springframework.security.web.session.SessionManagementFilter@34626d4, org.springframework.security.web.access.ExceptionTranslationFilter@66fff42f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@c7269ad]
[WARN][][2021-08-18 12:39:33.413][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:39:33.414][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:39:33.652][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:39:34.536][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:39:35.113][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:39:35.152][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:39:35.155][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:39:35.166][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629311975165 with initial instances count: 0
[INFO][][2021-08-18 12:39:35.178][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:39:35.231][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:39:35.232][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:39:35.237][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 10.883 seconds (JVM running for 11.475)
[INFO][][2021-08-18 12:39:43.106][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:39:43.107][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:39:43.132][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 24 ms
[INFO][][2021-08-18 12:39:43.272][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:39:43.273][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:39:43.273][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[INFO][][2021-08-18 12:39:45.521][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: cristian.archilac@gmail.com
[INFO][][2021-08-18 12:39:46.829][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:39:46.868][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:39:46.869][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:39:46.877][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:39:46.881][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@14a67c98
[INFO][][2021-08-18 12:40:10.459][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:40:10.460][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:40:10.465][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:40:10.912][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:40:10.914][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:40:10.918][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:40:10.918][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:40:21.348][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8504e3a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:40:22.179][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:40:23.769][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:40:23.773][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:40:23.918][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:40:25.201][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:40:25.758][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:40:26.116][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8504e3a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:40:26.705][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:40:26.741][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:40:26.742][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:40:26.959][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:40:26.959][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 3015 ms
[WARN][][2021-08-18 12:40:27.161][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:40:27.162][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:40:27.180][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6f1d799
[INFO][][2021-08-18 12:40:29.382][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: aa775939-9d9b-49e2-949f-e7b2b1302d59

[INFO][][2021-08-18 12:40:29.514][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22cb8e5f, org.springframework.security.web.context.SecurityContextPersistenceFilter@115a7e51, org.springframework.security.web.header.HeaderWriterFilter@6e1ad658, org.springframework.security.web.authentication.logout.LogoutFilter@1b5cf611, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5810772a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@682d9f21, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3aa1c45, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45753c22, org.springframework.security.web.session.SessionManagementFilter@4cd51e4e, org.springframework.security.web.access.ExceptionTranslationFilter@67292fc7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7df5549e]
[WARN][][2021-08-18 12:40:29.544][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:40:29.545][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:40:29.762][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:40:30.566][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:40:31.114][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:40:31.165][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:40:31.168][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:40:31.184][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629312031183 with initial instances count: 0
[INFO][][2021-08-18 12:40:31.199][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:40:31.258][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:40:31.260][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:40:31.266][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 11.385 seconds (JVM running for 11.851)
[INFO][][2021-08-18 12:40:54.480][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:40:54.483][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:40:54.509][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 26 ms
[INFO][][2021-08-18 12:40:54.661][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:40:54.661][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:40:54.662][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[INFO][][2021-08-18 12:40:56.878][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: cristian.archilac@gmail.com
[INFO][][2021-08-18 12:40:57.808][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:40:57.839][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:40:57.840][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:40:57.846][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:40:57.850][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4d54f294
[INFO][][2021-08-18 12:43:37.714][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:43:37.719][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:43:37.725][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:43:37.913][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:43:37.919][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:43:37.930][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:43:37.931][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:43:59.497][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c84a6f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:44:00.235][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:44:01.435][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:44:01.436][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:44:01.523][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:44:02.378][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:44:02.805][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:44:03.60][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c84a6f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:44:03.526][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:44:03.572][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:44:03.573][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:44:03.735][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:44:03.735][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2197 ms
[WARN][][2021-08-18 12:44:03.913][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:44:03.913][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:44:03.925][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@28bd5015
[INFO][][2021-08-18 12:44:05.494][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 2ed2db54-d485-4b42-9393-016f41bda56a

[INFO][][2021-08-18 12:44:05.597][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a522157, org.springframework.security.web.context.SecurityContextPersistenceFilter@67292fc7, org.springframework.security.web.header.HeaderWriterFilter@14d53884, org.springframework.security.web.authentication.logout.LogoutFilter@3f6d36eb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@117069f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4301fa39, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f71ae7f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@706c062e, org.springframework.security.web.session.SessionManagementFilter@7112b21a, org.springframework.security.web.access.ExceptionTranslationFilter@45b6c666, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bbc47c9]
[WARN][][2021-08-18 12:44:05.619][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:44:05.619][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:44:05.789][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:44:06.383][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:44:06.805][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:44:06.835][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:44:06.837][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:44:06.846][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629312246845 with initial instances count: 0
[INFO][][2021-08-18 12:44:06.855][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:44:06.892][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:44:06.893][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:44:06.896][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 8.741 seconds (JVM running for 9.791)
[INFO][][2021-08-18 12:44:21.558][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:44:21.559][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:44:21.580][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 20 ms
[INFO][][2021-08-18 12:44:21.707][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:44:21.708][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:44:21.709][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[INFO][][2021-08-18 12:44:24.693][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: cristian.archilac@gmail.com
[INFO][][2021-08-18 12:44:25.463][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:44:25.494][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:44:25.495][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:44:25.501][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:44:25.505][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@272c7808
[INFO][][2021-08-18 12:44:49.586][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:44:49.586][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:44:49.594][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:44:50.534][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:44:50.536][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:44:50.540][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:44:50.540][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:45:00.902][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$642c21ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:45:01.956][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:207] - Fetching config from server at : http://localhost:8888/config-server
[INFO][][2021-08-18 12:45:03.699][support-microservice][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:151] - Located environment: name=support-microservice, profiles=[local], label=null, version=8dfaba279c0c400e78fd17b93d16cd099c9d7846, state=null
[INFO][][2021-08-18 12:45:03.700][support-microservice][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:101] - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='git@github.com:T2MC/sccfg.git/support-microservice-local.yml'}]}
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
[INFO][][2021-08-18 12:45:03.837][support-microservice][org.springframework.boot.SpringApplication:679] - The following profiles are active: local
[WARN][][2021-08-18 12:45:05.81][support-microservice][org.springframework.boot.actuate.endpoint.EndpointId:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[INFO][][2021-08-18 12:45:05.654][support-microservice][org.springframework.cloud.context.scope.GenericScope:295] - BeanFactory id=bd42288e-cac4-30c9-9afc-400d0072f179
[INFO][][2021-08-18 12:45:05.990][support-microservice][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$642c21ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO][][2021-08-18 12:45:06.423][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90] - Tomcat initialized with port(s): 3347 (http)
[INFO][][2021-08-18 12:45:06.455][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting service [Tomcat]
[INFO][][2021-08-18 12:45:06.456][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Starting Servlet engine: [Apache Tomcat/9.0.19]
[INFO][][2021-08-18 12:45:06.645][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring embedded WebApplicationContext
[INFO][][2021-08-18 12:45:06.646][support-microservice][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2785 ms
[WARN][][2021-08-18 12:45:06.855][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:45:06.856][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:45:06.874][support-microservice][com.netflix.config.DynamicPropertyFactory:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1ad1b737
[INFO][][2021-08-18 12:45:08.832][support-microservice][org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:87] - 

Using generated security password: 953aaafa-e0a1-4cd4-87e5-07cf9829263e

[INFO][][2021-08-18 12:45:08.957][support-microservice][org.springframework.security.web.DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56976b8b, org.springframework.security.web.context.SecurityContextPersistenceFilter@7fc56d61, org.springframework.security.web.header.HeaderWriterFilter@15ee8861, org.springframework.security.web.authentication.logout.LogoutFilter@2a8e30e3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77e1dacd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74d53d63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78aa1753, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74844216, org.springframework.security.web.session.SessionManagementFilter@4fc256ec, org.springframework.security.web.access.ExceptionTranslationFilter@40d370fa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@257b6c58]
[WARN][][2021-08-18 12:45:08.990][support-microservice][com.netflix.config.sources.URLConfigurationSource:121] - No URLs will be polled as dynamic configuration sources.
[INFO][][2021-08-18 12:45:08.990][support-microservice][com.netflix.config.sources.URLConfigurationSource:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO][][2021-08-18 12:45:09.255][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:171] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:45:09.948][support-microservice][org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO][][2021-08-18 12:45:10.456][support-microservice][org.springframework.cloud.netflix.eureka.InstanceInfoFactory:72] - Setting initial instance status as: STARTING
[INFO][][2021-08-18 12:45:10.501][support-microservice][com.netflix.discovery.DiscoveryClient:349] - Initializing Eureka in region us-east-1
[INFO][][2021-08-18 12:45:10.503][support-microservice][com.netflix.discovery.DiscoveryClient:352] - Client configured to neither register nor query for data.
[INFO][][2021-08-18 12:45:10.515][support-microservice][com.netflix.discovery.DiscoveryClient:365] - Discovery Client initialized at timestamp 1629312310514 with initial instances count: 0
[INFO][][2021-08-18 12:45:10.526][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:41] - Registering application SUPPORT-MICROSERVICE with eureka with status UP
[INFO][][2021-08-18 12:45:10.580][support-microservice][org.springframework.boot.web.embedded.tomcat.TomcatWebServer:204] - Tomcat started on port(s): 3347 (http) with context path '/support-microservice'
[INFO][][2021-08-18 12:45:10.581][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:143] - Updating port to 3347
[INFO][][2021-08-18 12:45:10.585][support-microservice][org.springframework.boot.StartupInfoLogger:59] - Started SupportMicroserviceApplication in 11.128 seconds (JVM running for 11.689)
[INFO][][2021-08-18 12:45:18.562][support-microservice][org.apache.juli.logging.DirectJDKLog:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO][][2021-08-18 12:45:18.563][support-microservice][org.springframework.web.servlet.FrameworkServlet:524] - Initializing Servlet 'dispatcherServlet'
[INFO][][2021-08-18 12:45:18.584][support-microservice][org.springframework.web.servlet.FrameworkServlet:546] - Completed initialization in 20 ms
[INFO][][2021-08-18 12:45:18.770][support-microservice][net.occp.support.controller.SupportController:67] - Send mail
[INFO][][2021-08-18 12:45:18.770][support-microservice][net.occp.support.service.impl.SupportService:53] - sendMail service started
[INFO][][2021-08-18 12:45:18.771][support-microservice][net.occp.support.service.impl.SupportService:54] - cristian.archilac@gmail.com
[INFO][][2021-08-18 12:45:21.114][support-microservice][net.occp.support.service.impl.SupportService:59] - Email sent to: cristian.archilac@gmail.com
[INFO][][2021-08-18 12:45:21.506][support-microservice][com.netflix.config.ChainedDynamicProperty$ChainLink:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO][][2021-08-18 12:45:21.540][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:45:21.541][support-microservice][com.netflix.loadbalancer.BaseLoadBalancer:197] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO][][2021-08-18 12:45:21.548][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:222] - Using serverListUpdater PollingServerListUpdater
[INFO][][2021-08-18 12:45:21.552][support-microservice][com.netflix.loadbalancer.DynamicServerListLoadBalancer:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@77947250
[INFO][][2021-08-18 12:45:57.370][support-microservice][com.netflix.loadbalancer.PollingServerListUpdater$LazyHolder$2:53] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO][][2021-08-18 12:45:57.371][support-microservice][org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65] - Unregistering application SUPPORT-MICROSERVICE with eureka with status DOWN
[INFO][][2021-08-18 12:45:57.376][support-microservice][org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO][][2021-08-18 12:45:57.591][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-localhost
[INFO][][2021-08-18 12:45:57.597][support-microservice][com.netflix.util.concurrent.ShutdownEnabledTimer:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.base/java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.base/java.lang.Runtime.removeShutdownHook(Runtime.java:244)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO][][2021-08-18 12:45:57.611][support-microservice][com.netflix.discovery.DiscoveryClient:888] - Shutting down DiscoveryClient ...
[INFO][][2021-08-18 12:45:57.611][support-microservice][com.netflix.discovery.DiscoveryClient:911] - Completed shut down of DiscoveryClient
#logback.classic pattern: [%-4p][%X{x-pid}][%d{yyyy-MM-dd HH:mm:ss.SS}][support-microservice][%C:%L] - %m%n
